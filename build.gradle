plugins {
	id 'org.springframework.boot' version '2.4.1'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}
apply plugin: 'io.spring.dependency-management'
group = 'com.templates'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	compile("org.springframework.boot:spring-boot-starter-data-jpa:2.1.2.RELEASE")
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	runtime("mysql:mysql-connector-java:8.0.14")
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	compile("com.h2database:h2:1.4.195")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compile group: 'mysql', name: 'mysql-connector-java'
	compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
	compile 'org.modelmapper:modelmapper-examples:2.3.9'
	implementation 'org.mockito:mockito-core:3.7.7'
}

test {
	useJUnitPlatform()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.templates.apirest.ApirestApplication'
    }
    baseName = "apirest" + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}